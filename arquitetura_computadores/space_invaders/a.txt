MoveEnemyDown:	PUSH R1			; Posição da ram para o printstring
				PUSH R3			; Posição de inicio na RAM
				PUSH R2			; Posição de fim na ram
				PUSH R4			; Contador da Coluna
				PUSH R5			; aux

				INC M [ EnemyLowerLine ]
				MOV R1, M [ EnemyLowerLine ]

				CMP R1, 21
				JMP.NZ EndDamageCheck
				CALL EnemyDamageHandler
				JMP EndMoveEnemyDown

				EndDamageCheck:	MOV R2, M [ EnemyEndRam ]

								MOV R3, M [ EnemyStartRam ]
								DEC R3

								MOV R5, 42
								ADD M [ EnemyEndRam ], R5
								ADD M [ EnemyStartRam ], R5

								MOV R4, 0

				StartEnemyMoveDownLoop:	CMP R2, R3
										JMP.N EndMoveEnemyDownLoop
										
										CMP R4, 39					; Se tiver terminado a linha de inigos printe a linha
										JMP.NZ MoveCharacterDown

										CALL PrintString
										SUB R2, 42					; Anda uma linha para cima na RAM
										DEC R1						; Anda a linha de print uma pra cima		
										MOV R4, 0

				MoveCharacterDown: 	MOV R5, M [ R2 ]

									ADD R2, 42						; Anda para a proxima posição que o caracter deve estar
									MOV M [ R2 ], R5				; Move o caracter

									SUB R2, 42
									MOV R5, ' '
									MOV M [ R2 ], R5				; Limpa a posição anterior

									DEC R2
									INC R4

									JMP StartEnemyMoveDownLoop

				EndMoveEnemyDownLoop: 	CALL PrintString
										DEC R1
										CALL PrintString

				EndMoveEnemyDown: 	POP R5
									POP R4
									POP R3
									POP R2
									POP R1

									RET